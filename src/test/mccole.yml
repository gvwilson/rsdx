title: "Test Invasion Percolation"
tag: "Use mocks to test programs that rely on pseudo-randomness."
abstract: >
    Testing research software is hard:
    the algorithms are often subtle,
    and we often don't know what the correct output is supposed to be
    except in a handful of trivial cases.
    This lesson introduces several tools that can make the problem tractable,
    including the use of mock objects to make randomness less random
    and the use of coverage tools to determine
    what is and isn't being tested.
syllabus:
-   Deciding what tests to write (assume readers have already met [`pytest`][pytest]).
-   Creating and using mock objects.
-   Making "random" reproducible.
-   Using [coverage][coverage] to determine what is and isn't being tested.
copied:
-   src/refactor/grid_array.py
-   src/refactor/grid_list.py
-   src/refactor/invperc.py
